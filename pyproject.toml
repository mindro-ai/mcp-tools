[tool.poetry]
name = "mcp-tools"
version = "0.1.0"
description = "MCP Tools Project"
authors = ["Mindro Development Team <info@mindro-ai.com>"]
readme = "README.md"
packages = [{include = "mcp_tools"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
httpx = "^0.27.0"
pydantic = "^2.8.0"
mcp = "^1.12.4"
python-dotenv = "^1.0.0"
uvicorn = "^0.27.0"
python-multipart = "^0.0.9"
plotly = "^6.2.0"
kaleido = "^1.0.0"
langgraph = "^0.6.1"
langchain-core = "^0.3.72"
pandas = "^2.3.1"
numpy = "^2.3.2"
sqlalchemy = "^2.0.42"
aiohttp = "^3.12.15"
websockets = "^15.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pylint = "^3.0.0"
pytest-asyncio = "^1.0.0"
black = "^25.1.0"
isort = "^6.0.1"

[tool.poetry.scripts]
mcp-server = "mcp_tools.__main__:main"

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "C0303",  # trailing-whitespace
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
    "W0621",  # redefined-outer-name
    "W0703",  # broad-except
    "W0612",  # unused-variable
    "W0611",  # unused-import
]

[tool.pylint.format]
max-line-length = 88
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-returns = 10
max-branches = 15
max-statements = 60
max-parents = 7
max-attributes = 10
min-public-methods = 0
max-public-methods = 30

[tool.pylint.exceptions]
overgeneral-exceptions = ["Exception"]

[tool.pylint.refactoring]
max-nested-blocks = 5

[tool.pylint.variables]
dummy-variables-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.pylint.classes]
exclude-protected = ["_asdict", "_fields", "_replace", "_source", "_make"]

[tool.pylint.imports]
deprecated-modules = ["regsub", "TERMIOS", "Bastion", "rexec"]
import-graph = []
ext-import-graph = []
int-import-graph = []

[tool.pylint.string]
check-quote-consistency = true

[tool.pylint.miscellaneous]
notes = []

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
